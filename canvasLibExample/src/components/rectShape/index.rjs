import pencilFlow, { init } from '@ray-js/pencil-flow';
const { Stage, Group, Graphics, Rect, Circle, Bitmap, Text } = pencilFlow;

export default Render({
  renderCanvas(canvasId, hitCanvasId, pixelRatio) {
    init(canvasId, hitCanvasId, { pixelRatio }).then(({ stage }) => {
      const rect1 = new Rect(100, 100, {
        id: 'rect1',
        fillGradient: ['#ff0000', '#0000ff', '#ffff00'],
        gradientPoints: [
          { x: 0, y: 0 },
          { x: 100, y: 100 },
        ],
      });

      rect1.alpha = 0.8;
      rect1.x = 0;
      rect1.y = 0;

      rect1.on('drag', function (event) {
        rect1.x += event.dx;
        rect1.y += event.dy;
        stage.update();
      });

      rect1.on('touchstart', function (event) {
        rect1.alpha = 0.5;
        stage.update();
      });
      rect1.on('touchend', function (event) {
        rect1.alpha = 1;
        stage.update();
      });

      const rect2 = new Rect(100, 100, {
        fillStyle: 'blue',
        id: 'rect2',
      });

      rect1.on('tap', function (event) {
        const { option } = event.target || {};
        if (option && option.id !== undefined) {
          console.log('id tap', option.id);
        }
      });

      rect2.on('touchend', function (event) {
        const { option } = event.target || {};
        if (option && option.id !== undefined) {
          console.log('id touchend', option.id);
        }
      });

      rect2.alpha = 0.8;
      rect2.x = 150;
      rect2.y = 150;
      rect2.on('drag', function (event) {
        rect2.x += event.dx;
        rect2.y += event.dy;
        stage.update();
      });

      rect2.on('touchstart', function (event) {
        rect2.alpha = 0.5;
        stage.update();
      });
      rect2.on('touchend', function (event) {
        rect2.alpha = 1;
        stage.update();
      });

      stage.add(rect1);
      stage.add(rect2);
      stage.update();
    });
  },
});
