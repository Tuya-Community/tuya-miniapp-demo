import pencilFlow, { init } from '@ray-js/pencil-flow';
const { Stage, Group, Graphics, Rect, Circle, Bitmap, Text, RoundedRect } = pencilFlow;

export default Render({
  renderCanvas(canvasId, hitCanvasId, pixelRatio) {
    init(canvasId, hitCanvasId, { pixelRatio }).then(({ stage }) => {
      const width = 100;
      const height = 50;
      const radius = 10;
      const roundedRect1 = new RoundedRect(width, height, radius, {
        gradientPoints: [
          {
            x: 0,
            y: 0,
          },
          {
            x: width,
            y: height,
          },
        ],
        fillGradient: ['red', 'green', 'blue'],
        id: 'Polygon',
      });
      roundedRect1.alpha = 1;
      roundedRect1.x = 10;
      roundedRect1.y = 50;
      roundedRect1.on('drag', function (event) {
        roundedRect1.x += event.dx;
        roundedRect1.y += event.dy;
        stage.update();
      });

      roundedRect1.on('touchstart', function (event) {
        roundedRect1.alpha = 0.5;
        stage.update();
      });
      roundedRect1.on('touchend', function (event) {
        roundedRect1.alpha = 1;
        stage.update();
      });
      const roundedRect2 = new RoundedRect(width, height, radius, {
        fillStyle: 'blue',
        id: 'Polygon2',
      });
      roundedRect2.alpha = 1;
      roundedRect2.x = 50;
      roundedRect2.y = 150;

      roundedRect2.on('drag', function (event) {
        roundedRect2.x += event.dx;
        roundedRect2.y += event.dy;
        stage.update();
      });

      roundedRect2.on('touchstart', function (event) {
        roundedRect2.alpha = 0.5;
        stage.update();
      });
      roundedRect2.on('touchend', function (event) {
        roundedRect2.alpha = 1;
        stage.update();
      });

      const roundedRect3 = new RoundedRect(width, height, radius, {
        gradientPoints: [
          {
            x: 0,
            y: 0,
          },
          {
            x: width,
            y: height,
          },
        ],
        lineWidth: 4,
        strokeGradient: ['red', 'green', 'blue'],
        id: 'Polygon3',
      });
      roundedRect3.x = 130;
      roundedRect3.y = 50;

      const group = new Group();

      group.x = 20;
      group.y = 20;
      // 测试是否可以重复添加成功
      group.add(roundedRect1);
      group.add(roundedRect1);
      group.add(roundedRect1);
      group.add(roundedRect1);
      group.add(roundedRect1);

      group.add(roundedRect2);
      group.add(roundedRect3);

      stage.add(group);
      stage.update();
    });
  },
});
