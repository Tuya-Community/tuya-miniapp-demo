import pencilFlow, { init } from '@ray-js/pencil-flow';
const { Stage, Group, Graphics, Rect, Circle, Bitmap, Text, Sector } = pencilFlow;

export default Render({
  renderCanvas(canvasId, hitCanvasId, pixelRatio) {
    init(canvasId, hitCanvasId, { pixelRatio }).then(({ stage }) => {
      const radius = 50;
      const startAngle = 0;
      const endAngle = (Math.PI * 2) / 4;
      const sector1 = new Sector(radius, startAngle, endAngle, {
        anticlockwise: true,
        gradientPoints: [
          {
            x: -radius,
            y: radius / 2,
          },
          {
            x: radius,
            y: radius / 2,
          },
        ],
        fillGradient: ['red', 'yellow', 'blue'],
        id: 'Sector1',
      });

      sector1.alpha = 1;
      sector1.x = 50;
      sector1.y = 50;
      sector1.on('drag', function (event) {
        sector1.x += event.dx;
        sector1.y += event.dy;
        stage.update();
      });

      sector1.on('touchstart', function (event) {
        sector1.alpha = 0.5;
        stage.update();
      });
      sector1.on('touchend', function (event) {
        sector1.alpha = 1;
        stage.update();
      });
    
      const sector2 = new Sector(radius, startAngle, endAngle, {
        fillStyle: 'blue',
        id: 'Sector',
      });
      sector2.alpha = 1;
      sector2.x = 50;
      sector2.y = 150;

      sector2.on('drag', function (event) {
        sector2.x += event.dx;
        sector2.y += event.dy;
        stage.update();
      });

      sector2.on('touchstart', function (event) {
        sector2.alpha = 0.5;
        stage.update();
      });
      sector2.on('touchend', function (event) {
        sector2.alpha = 1;
        stage.update();
      });
    

      const sector3 = new Sector(radius, startAngle, endAngle, {
        gradientPoints: [
          {
            x: -radius,
            y: radius / 2,
          },
          {
            x: radius,
            y: radius / 2,
          },
        ],

        lineWidth: 4,
        strokeGradient: ['red', 'yellow', 'blue'],
        id: 'Sector3',
      });
      sector3.x = 130;
      sector3.y = 50;

      const group = new Group();

      group.x = 20;
      group.y = 20;
      // 测试是否可以重复添加成功
      group.add(sector1);
      group.add(sector1);
      group.add(sector1);
      group.add(sector1);
      group.add(sector1);

      group.add(sector2);
      group.add(sector3);

      stage.add(group);
      stage.update();
    });
  },
});

