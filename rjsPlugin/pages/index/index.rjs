function getMockDate() {
  return new Array(12).fill(0).map((_, index) => {
    return Math.random() * 100
  })
}

function getOptions() {
  const colors = ['#5470C6', '#EE6666']
  return {
    color: colors,
    tooltip: { trigger: 'none', axisPointer: { type: 'cross' } },
    legend: {},
    grid: { top: 70, bottom: 50 },
    xAxis: [
      {
        type: 'category',
        axisTick: {
          alignWithLabel: true,
        },
        axisLine: {
          onZero: false,
          lineStyle: {
            color: colors[1],
          },
        },
        axisPointer: {
          label: {
            formatter: function (params) {
              return ('Precipitation  ' + params.value + (params.seriesData.length ? '：' + params.seriesData[0].data : ''));
            },
          },
        }, // prettier-ignore
        data: [
          '2016-1',
          '2016-2',
          '2016-3',
          '2016-4',
          '2016-5',
          '2016-6',
          '2016-7',
          '2016-8',
          '2016-9',
          '2016-10',
          '2016-11',
          '2016-12',
        ],
      },
      {
        type: 'category',
        axisTick: {
          alignWithLabel: true,
        },
        axisLine: {
          onZero: false,
          lineStyle: {
            color: colors[0],
          },
        },
        axisPointer: {
          label: {
            formatter: function (params) {
              return ('Precipitation  ' + params.value + (params.seriesData.length ? '：' + params.seriesData[0].data : ''));
            },
          },
        }, // prettier-ignore
        data: [
          '2015-1',
          '2015-2',
          '2015-3',
          '2015-4',
          '2015-5',
          '2015-6',
          '2015-7',
          '2015-8',
          '2015-9',
          '2015-10',
          '2015-11',
          '2015-12',
        ],
      },
    ],
    yAxis: [
      {
        type: 'value',
      },
    ],
    series: [
      {
        name: 'Precipitation(2015)',
        type: 'line',
        xAxisIndex: 1,
        smooth: true,
        emphasis: {
          focus: 'series',
        },
        data: getMockDate(),
      },
      {
        name: 'Precipitation(2016)',
        type: 'line',
        smooth: true,
        emphasis: {
          focus: 'series',
        },
        data: getMockDate(),
      },
    ],
  }
}

export default Render({
  myChart: null,

  async init(canvasId, pixelRatio) {
    // Render 实例方法
    // @see https://developer.tuya.com/cn/miniapp/develop/miniapp/framework/api/render#%E5%AE%9E%E4%BE%8B%E5%AF%B9%E8%B1%A1
    const canvas = await this.instance.getCanvasById(canvasId)
    const echarts = await requirePlugin('rjs://echarts')

    // 定义 myChart 赋值，下次更新使用
    this.myChart = echarts.init(canvas, undefined, {
      useDirtyRect: true,
      devicePixelRatio: pixelRatio,
    })

    // 使用刚指定的配置项和数据显示图表。
    this.myChart.setOption(getOptions(), true)
  },

  updateEcharts(/* newData */) {
    // 如果有新数据则按需更新对应的 options 字段
    // 更新数据
    this.myChart.setOption(getOptions(), true)
  },
})
